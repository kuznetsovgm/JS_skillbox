{"version":3,"sources":["redux/types.js","api/Storage.js","redux/actions/commentActions.js","Components/Comment.js","redux/actions/userActions.js","App.js","redux/store.js","reportWebVitals.js","redux/reducers/rootReducer.js","redux/reducers/commentReducer.js","redux/reducers/userReducer.js","index.js"],"names":["COMMENTS","USER","SET_COMMENTS","ADD_COMMENT","DELETE_COMMENT","LOAD_USER","SET_USER","Storage","this","storage","window","localStorage","code","value","setItem","JSON","stringify","getItem","parse","addComment","name","text","dispatch","getState","comments","slice","newComment","type","addNewComment","date","Date","now","id","length","reactions","up","down","saveComments","addReaction","commentId","reaction","myName","commentIndex","findIndex","comment","Object","keys","map","includes","removeReaction","push","insertReaction","toggleReaction","setComments","deleteComment","splice","set","useStyles","makeStyles","root","minWidth","marginBottom","actions","display","delete","connect","state","userName","user","props","timestamp","classes","console","log","Card","className","variant","CardContent","Typography","component","color","toLocaleString","CardActions","IconButton","aria-label","onClick","disabled","ThumbDown","ThumbUp","Delete","initialState","initComments","get","save","loadUser","setUserName","setUser","React","useState","myComment","setMyComment","useEffect","Fragment","Box","my","key","TextField","label","onChange","e","target","multiline","fullWidth","justifyContent","Button","replace","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5396e3ac.chunk.js","sourcesContent":["export const COMMENTS = 'comments';\r\nexport const USER = 'user';\r\n\r\nexport const SET_COMMENTS = 'SET_COMMENTS';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\r\n\r\nexport const LOAD_USER = 'LOAD_USER';\r\nexport const SET_USER = 'SET_USER';\r\n\r\n","export default class Storage {\n    constructor() {\n        this.storage = window.localStorage;\n    }\n\n    set(code, value) {\n        this.storage.setItem(code, JSON.stringify(value));\n    }\n\n    get(code) {\n        const value = this.storage.getItem(code);\n        return !!value ? JSON.parse(value) : null;\n    }\n}\n","import { ADD_COMMENT, COMMENTS, SET_COMMENTS, DELETE_COMMENT } from '../types';\nimport Storage from '../../api/Storage';\n\nconst storage = new Storage();\n\nexport function init() {\n    return (dispatch, getState) => {\n        const comments = storage.get(COMMENTS) || [];\n        dispatch(setComments(comments))\n    };\n}\n\nexport function addComment(name, text) {\n    return (dispatch, getState) => {\n        const comments = getState().comments.slice();\n        const newComment = {\n            name, \n            text, \n            date: Date.now(), \n            id: (1000 + comments.length), \n            reactions: {up: [], down: []}\n        }\n        dispatch(addNewComment(newComment));\n        dispatch(saveComments());\n    };\n}\n\nexport function addReaction(commentId, reaction, myName) {\n    return (dispatch, getState) => {\n        const comments = getState().comments.slice();\n        const commentIndex = comments.findIndex(comment => comment.id === commentId);\n        const comment = {...comments[commentIndex]};\n\n        comment.reactions = {...comment.reactions};\n        Object.keys(comment.reactions).map(reaction => reaction.slice());\n\n        toggleReaction(comment, reaction, myName);\n\n        comments[commentIndex] = comment;\n\n        dispatch(setComments(comments));\n        dispatch(saveComments());\n    };\n}\n\nexport function deleteComment(id) {\n    return (dispatch, getState) => {\n        const comments = getState().comments.slice();\n        const commentIndex = comments.findIndex(comment => comment.id === id);\n        comments.splice(commentIndex, 1);\n        dispatch(removeComment());\n        dispatch(setComments(comments))\n        dispatch(saveComments());\n    };\n}\n\nexport function setComments(comments) {\n    return {\n        type: SET_COMMENTS,\n        comments\n    }\n}\n\nexport function addNewComment(newComment) {\n    return {    \n        type: ADD_COMMENT,\n        newComment\n    };\n}\n\nexport function removeComment() {\n    return {    \n        type: DELETE_COMMENT\n    };\n}\n\nexport function saveComments() {\n    return (dispatch, getState) => {\n        storage.set(COMMENTS, getState().comments);\n    }\n}\n\nfunction toggleReaction(comment, reaction, myName) {\n    //если уже есть реакция, удаляем её, иначе добавляем\n    return comment.reactions[reaction].includes(myName) \n        ? removeReaction(comment, reaction, myName) \n        : insertReaction(comment, reaction, myName);\n}\n\nfunction insertReaction(comment, reaction, myName) {\n    if (!comment.reactions[reaction].includes(myName)) {\n        comment.reactions[reaction].push(myName);\n        //если поставили лайк, нужно удалить дизлайк и наоборот\n        const rmReaction = reaction === 'up' ? 'down' : 'up';\n        removeReaction(comment, rmReaction, myName);\n    }\n\n    return comment;\n}\n\nfunction removeReaction(comment, reaction, myName) {\n    const id = comment.reactions[reaction].findIndex(name => name === myName);\n    if (id > -1) {\n        comment.reactions[reaction].splice(id, 1);\n    }\n\n    return comment;\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport { ThumbUp as ThumbUpIcon, ThumbDown as ThumbDownIcon, Delete as DeleteIcon } from '@material-ui/icons';\nimport { connect } from 'react-redux';\nimport { deleteComment, addReaction } from '../redux/actions/commentActions';\n\nconst useStyles = makeStyles({\n    root: {\n      minWidth: 275,\n      marginBottom: 10\n    },\n    actions: {\n        display: \"flex\",\n    },\n    delete: {\n        \n    },\n});\n\nconst formatDate = timestamp => new Date(timestamp).toLocaleString();\n\nfunction Comment(props) {\n    const classes = useStyles();\n    const { comment, userName } = props;\n\n    console.log('render comment ', comment.id);\n\n    return (\n        <Card className={classes.root} variant={\"outlined\"}>\n            <CardContent>\n                <Typography variant=\"body2\" component=\"p\">\n                    {comment.text}\n                </Typography>\n                <Typography variant=\"subtitle2\" color=\"textSecondary\" display={\"inline\"}>\n                    {comment.name}\n                </Typography>\n                &nbsp;\n                <Typography variant=\"caption\" color=\"textSecondary\" display={\"inline\"}>\n                    {formatDate(comment.date)}\n                </Typography>\n            </CardContent>\n            <CardActions className={classes.actions}>\n                <IconButton aria-label=\"down\" onClick={() => props.addReaction(comment.id, 'down', userName)} disabled={!userName || comment.name === userName} >\n                    <ThumbDownIcon color={comment.reactions.down.includes(userName) ? 'primary' : 'inherit'} />\n                </IconButton>\n                &nbsp;({comment.reactions.down.length})\n                <IconButton aria-label=\"up\" onClick={() => props.addReaction(comment.id, 'up', userName)} disabled={!userName || comment.name === userName} >\n                    <ThumbUpIcon color={comment.reactions.up.includes(userName) ? 'primary' : 'inherit'} />\n                </IconButton>\n                &nbsp;({comment.reactions.up.length})\n                {comment.name === userName && <IconButton aria-label=\"delete\" className={classes.delete} onClick={() => props.deleteComment(comment.id)}>\n                    <DeleteIcon />\n                </IconButton>}\n            </CardActions>\n        </Card>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addReaction: (commentId, reaction, userName) => dispatch(addReaction(commentId, reaction, userName)),\n        deleteComment: (id) => dispatch(deleteComment(id)),\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        userName: state.user,\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Comment);\n","import { USER, SET_USER, LOAD_USER } from '../types';\nimport Storage from '../../api/Storage';\n\nconst storage = new Storage();\n\nexport function loadUser() {\n    const user = storage.get(USER) || \"\";\n    return {\n        type: LOAD_USER,\n        user\n    }\n}\n\nexport function setUser(userName) {\n    storage.set(USER, userName);\n    return {\n        type: SET_USER,\n        userName\n    }\n}\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Comment from './Components/Comment';\nimport { addComment, saveComments, init } from './redux/actions/commentActions';\nimport { loadUser, setUser } from './redux/actions/userActions';\n\n\nconst filterHtml = (text) => {\n    return text.replace(/(<([^>]+)>)/gm, '');\n}\n\nfunction App(props) {\n    const {comments, userName} = props;\n    const [myComment, setMyComment] = React.useState('');\n\n    useEffect(() => {\n        props.initComments();\n        props.loadUser();\n    }, []);\n\n    const sendComment = () => {\n        props.addComment(userName, filterHtml(myComment));\n        setMyComment('');\n    }\n\n    return <React.Fragment>\n        <Box my={3}>\n            {comments.map((comment, key) => <Comment \n                comment={comment} \n                key={`comment_${key}`} \n            />)}\n        </Box>\n        <Box my={3}>\n            <TextField\n                label=\"Ваше имя\"\n                variant=\"outlined\"\n                value={userName}\n                onChange={e => props.setUserName(e.target.value)}\n            />\n        </Box>\n\n        <Box my={3}>\n            <TextField\n                label=\"Ваш комментарий\"\n                multiline\n                fullWidth\n                variant=\"outlined\"\n                value={myComment}\n                onChange={e => setMyComment(e.target.value)}\n            />\n        </Box>\n        <Box display=\"flex\" justifyContent=\"center\" my={3}>\n            <Button \n                variant={'outlined'}\n                onClick={sendComment}\n                disabled={!userName || !myComment}\n            >\n                Опубликовать\n            </Button>\n        </Box>\n\n    </React.Fragment>\n}\n\nconst mapStateToProps = state => {\n    return {\n        comments: state.comments,\n        userName: state.user,\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        initComments: () => dispatch(init()),\n        addComment: (name, comment) => dispatch(addComment(name, comment)),\n        save: () => dispatch(saveComments()),\n        loadUser: () => dispatch(loadUser()),\n        setUserName: (userName) => dispatch(setUser(userName)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from './reducers/rootReducer';\r\n\r\nexport default (initialState) => createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(\r\n        applyMiddleware(thunk)\r\n    )\r\n);\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\r\nimport { commentReducer } from './commentReducer';\r\nimport { userReducer } from './userReducer';\r\n\r\nexport const rootReducer = combineReducers({comments: commentReducer, user: userReducer});\r\n","import { ADD_COMMENT, INIT_APP, SAVE, SET_COMMENTS } from '../types';\r\n\r\nexport const commentReducer = (state = [], action) => {\r\n    console.log(action);\r\n    switch (action.type) {\r\n        case ADD_COMMENT: \r\n            state.push({...action.newComment});\r\n            return state;\r\n        case SET_COMMENTS:\r\n            return action.comments.slice();\r\n\r\n        default: return state;\r\n    }\r\n}\r\n","import { LOAD_USER, SET_USER } from '../types';\n\nexport const userReducer = (state = \"\", action) => {\n    switch (action.type) {\n        case LOAD_USER: \n            return action.user;\n        case SET_USER: \n            return action.userName;\n\n        default: return state;\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport configureStore from './redux/store';\nimport { Provider } from 'react-redux';\n\nconst store = configureStore({});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}