{"version":3,"sources":["Components/Comment.js","App.js","Components/CommentsStorage.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","minWidth","marginBottom","actions","display","delete","Comment","props","timestamp","classes","comment","myName","Card","className","variant","CardContent","Typography","component","text","color","name","date","Date","toLocaleString","CardActions","IconButton","aria-label","onClick","addReaction","id","disabled","ThumbDown","reactions","down","includes","length","ThumbUp","up","deleteComment","Delete","storage","downloadComments","_comments","JSON","parse","getItem","commentsItem","this","window","localStorage","push","now","comments","save","commentId","getComment","deleted","reaction","rmReaction","removeReaction","findIndex","splice","setItem","stringify","find","filter","sort","a","b","App","React","useState","setComments","myComment","setMyComment","setMyName","allComments","Fragment","Box","my","map","key","TextField","label","value","onChange","e","target","multiline","fullWidth","justifyContent","Button","addNewComment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fede7c16.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport { ThumbUp as ThumbUpIcon, ThumbDown as ThumbDownIcon, Delete as DeleteIcon } from '@material-ui/icons';\n\nconst useStyles = makeStyles({\n    root: {\n      minWidth: 275,\n      marginBottom: 10\n    },\n    actions: {\n        display: \"flex\",\n    },\n    delete: {\n        \n    },\n});\n\nconst formatDate = timestamp => new Date(timestamp).toLocaleString();\n\nexport default function Comment(props) {\n    const classes = useStyles();\n    const { comment, myName } = props;\n\n    return (\n        <Card className={classes.root} variant={\"outlined\"}>\n            <CardContent>\n                <Typography variant=\"body2\" component=\"p\">\n                    {comment.text}\n                </Typography>\n                <Typography variant=\"subtitle2\" color=\"textSecondary\" display={\"inline\"}>\n                    {comment.name}\n                </Typography>\n                &nbsp;\n                <Typography variant=\"caption\" color=\"textSecondary\" display={\"inline\"}>\n                    {formatDate(comment.date)}\n                </Typography>\n            </CardContent>\n            <CardActions className={classes.actions}>\n                <IconButton aria-label=\"down\" onClick={() => props.addReaction(comment.id, 'down')} disabled={!myName || comment.name === myName} >\n                    <ThumbDownIcon color={comment.reactions.down.includes(myName) ? 'primary' : 'inherit'} />\n                </IconButton>\n                &nbsp;({comment.reactions.down.length})\n                <IconButton aria-label=\"up\" onClick={() => props.addReaction(comment.id, 'up')} disabled={!myName || comment.name === myName} >\n                    <ThumbUpIcon color={comment.reactions.up.includes(myName) ? 'primary' : 'inherit'} />\n                </IconButton>\n                &nbsp;({comment.reactions.up.length})\n                {comment.name === myName && <IconButton aria-label=\"delete\" className={classes.delete} onClick={() => props.deleteComment(comment.id)}>\n                    <DeleteIcon />\n                </IconButton>}\n            </CardActions>\n        </Card>\n    )\n}","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Comment from './Components/Comment';\nimport CommentsStorage from './Components/CommentsStorage';\n\nconst storage = new CommentsStorage();\n\nexport default function App(props) {\n    const [comments, setComments] = React.useState(storage.comments);\n    const [myComment, setMyComment] = React.useState('');\n    const [myName, setMyName] = React.useState('');\n\n    const sendComment = () => {\n        let allComments = storage.addNewComment(myName, myComment);\n        setComments(allComments);\n        setMyComment('');\n    }\n\n    const deleteComment = (commentId) => {\n        let comment = comments.find(comment => comment.id === commentId);\n        if (comment.name !== myName) return false;\n        let allComments = storage.deleteComment(commentId);\n        setComments(allComments);\n    }\n\n    const addReaction = (commentId, reaction) => {\n        let allComments = storage.addReaction(commentId, reaction, myName);\n        setComments(allComments);\n    };\n\n    return <React.Fragment>\n        <Box my={3}>\n            {comments.map((comment, key) => <Comment \n                comment={comment} \n                key={`comment_${key}`} \n                deleteComment={deleteComment} \n                addReaction={addReaction}\n                myName={myName}\n            />)}\n        </Box>\n        <Box my={3}>\n            <TextField\n                label=\"Ваше имя\"\n                variant=\"outlined\"\n                value={myName}\n                onChange={e => setMyName(e.target.value)}\n            />\n        </Box>\n\n        <Box my={3}>\n            <TextField\n                label=\"Ваш комментарий\"\n                multiline\n                fullWidth\n                variant=\"outlined\"\n                value={myComment}\n                onChange={e => setMyComment(e.target.value)}\n            />\n        </Box>\n        <Box display=\"flex\" justifyContent=\"center\" my={3}>\n            <Button \n                variant={'outlined'}\n                onClick={sendComment}\n                disabled={!myName || !myComment}\n            >\n                Опубликовать\n            </Button>\n        </Box>\n\n    </React.Fragment>\n}\n","export default class CommentStorage {\n    constructor() {\n        this._comments = [];\n        this.reactions = ['up', 'down'];\n        this.commentsItem = \"comments\";\n        this.storage = window.localStorage;\n        this.downloadComments();\n    }\n\n    downloadComments = () => {\n        this._comments = JSON.parse(this.storage.getItem(this.commentsItem) || \"[]\");\n    }\n\n    get comments() {\n        return this._comments.filter(comment => !comment.deleted).sort((a, b) => b.date - a.date);\n    }\n\n    addNewComment(name, text) {\n        this._comments.push({name, text, date: Date.now(), id: (1000 + this.comments.length), reactions: {up: [], down: []}})\n        this.save();\n        return this.comments;\n    }\n\n    deleteComment(commentId) {\n        const comment = this.getComment(commentId);\n        comment.deleted = true;\n        this.save();\n        return this.comments;\n    }\n\n    addReaction(commentId, reaction, myName) {\n        if (!this.reactions.includes(reaction)) return false;\n        const comment = this.getComment(commentId);\n\n        if (!comment.reactions[reaction].includes(myName)) {\n            comment.reactions[reaction].push(myName);\n            const rmReaction = reaction === 'up' ? 'down' : 'up';\n            this.removeReaction(commentId, rmReaction, myName);\n            this.save();\n        }\n\n        return this.comments;\n    }\n\n    removeReaction(commentId, reaction, myName) {\n        if (!this.reactions.includes(reaction)) return false;\n        const comment = this.getComment(commentId);\n\n        const id = comment.reactions[reaction].findIndex(name => name === myName);\n        if (id > -1) {\n            comment.reactions[reaction].splice(id, 1);\n            this.save();\n        }\n\n        return this.comments;\n    }\n\n    save() {\n        this.storage.setItem(this.commentsItem, JSON.stringify(this.comments));\n    }\n\n    getComment(id) {\n        return this._comments.find(comment => comment.id === id);\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}